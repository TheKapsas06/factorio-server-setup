[defaults]
# (boolean) By default, Ansible will issue a warning when received from a task action (module or action plugin).
# These warnings can be silenced by adjusting this setting to False.
action_warnings=True

# (string) This allows you to choose a specific cowsay stencil for the banners or use 'random' to cycle through them.
cow_selection=default

# (boolean) This option forces color mode even when running without a TTY or the "nocolor" setting is True.
force_color=False

# (path) The default root path for Ansible config files on the controller.
home=~/.ansible

# (boolean) This setting allows suppressing colorizing output, which is used to give a better indication of failure and status information.
nocolor=False

# (pathlist) Comma-separated list of Ansible inventory sources
inventory=./inventory/hosts.yaml

# (boolean) Toggle Ansible's display and logging of task details, mainly used to avoid security disclosures.
no_log=False

# Set python interpreter to be system default
interpreter_python=/usr/bin/python

# (list) Check all of these extensions when looking for 'variable' files which should be YAML or JSON or vaulted versions of these.
# This affects vars_files, include_vars, inventory and vars plugins among others.
yaml_valid_extensions=.yml, .yaml, .json


[privilege_escalation]
# (boolean) Display an agnostic become prompt instead of displaying a prompt containing the command line supplied become method.
agnostic_become_prompt=True

# (boolean) When ``False``(default), Ansible will skip using become if the remote user is the same as the become user, as this is normally a redundant operation. In other words root sudo to root.
# If ``True``, this forces Ansible to use the become plugin anyways as there are cases in which this is needed.
become_allow_same_user=True

# (boolean) Toggles the use of privilege escalation, allowing you to 'become' another user after login.
become=False

# (boolean) Toggle to prompt for privilege escalation password.
become_ask_pass=False

# (string) executable to use for privilege escalation, otherwise Ansible will depend on PATH.
become_exe=

# (string) Flags to pass to the privilege escalation executable.
become_flags=

# (string) Privilege escalation method to use when `become` is enabled.
become_method=sudo

# (string) The user your login/remote user 'becomes' when using privilege escalation, most systems will use 'root' when no user is specified.
become_user=root


[persistent_connection]

# (int) This controls the amount of time to wait for a response from a remote device before timing out a persistent connection.
command_timeout=30

# (integer) This controls the retry timeout for persistent connection to connect to the local domain socket.
connect_retry_timeout=15

# (integer) This controls how long the persistent connection will remain idle before it is destroyed.
connect_timeout=30


[selinux]
# (boolean) This setting causes libvirt to connect to LXC containers by passing ``--noseclabel`` parameter to ``virsh`` command. This is necessary when running on systems which do not have SELinux.
libvirt_lxc_noseclabel=False

# (list) Some filesystems do not support safe operations and/or return inconsistent errors, this setting makes Ansible 'tolerate' those in the list without causing fatal errors.
# Data corruption may occur and writes are not always verified when a filesystem is in the list.
special_context_filesystems=fuse, nfs, vboxsf, ramfs, 9p, vfat


[diff]
# (bool) Configuration toggle to tell modules to show differences when in 'changed' status, equivalent to ``--diff``.
always=False

# (integer) Number of lines of context to show when displaying the differences between files.
context=3


[inventory]
# (string) This setting changes the behaviour of mismatched host patterns, it allows you to force a fatal error, a warning or just ignore it.
host_pattern_mismatch=warning

# (boolean) If 'true', it is a fatal error when any given inventory source cannot be successfully parsed by any available inventory plugin; otherwise, this situation only attracts a warning.

any_unparsed_is_failed=False

# (bool) Toggle to turn on inventory caching.
# This setting has been moved to the individual inventory plugins as a plugin option :ref:`inventory_plugins`.
# The existing configuration settings are still accepted with the inventory plugin adding additional options from inventory configuration.
# This message will be removed in 2.16.
cache=False

# (string) The table prefix for the cache plugin.
# This setting has been moved to the individual inventory plugins as a plugin option :ref:`inventory_plugins`.
# The existing configuration settings are still accepted with the inventory plugin adding additional options from inventory and fact cache configuration.
# This message will be removed in 2.16.
cache_prefix=ansible_inventory_

# (string) Expiration timeout for the inventory cache plugin data.
# This setting has been moved to the individual inventory plugins as a plugin option :ref:`inventory_plugins`.
# The existing configuration settings are still accepted with the inventory plugin adding additional options from inventory and fact cache configuration.
# This message will be removed in 2.16.
cache_timeout=3600

# (list) List of enabled inventory plugins, it also determines the order in which they are used.
enable_plugins=host_list, script, auto, yaml, ini, toml

# (bool) Controls if ansible-inventory will accurately reflect Ansible's view into inventory or its optimized for exporting.
export=False

# (list) List of extensions to ignore when using a directory as an inventory source.
ignore_extensions=.pyc, .pyo, .swp, .bak, ~, .rpm, .md, .txt, .rst, .orig, .ini, .cfg, .retry

# (list) List of patterns to ignore when using a directory as an inventory source.
ignore_patterns=

# (bool) If 'true' it is a fatal error if every single potential inventory source fails to parse, otherwise, this situation will only attract a warning.

unparsed_is_failed=False

# (boolean) By default, Ansible will issue a warning when no inventory was loaded and notes that it will use an implicit localhost-only inventory.
# These warnings can be silenced by adjusting this setting to False.
inventory_unparsed_warning=True


[jinja2]
# (list) This list of filters avoids 'type conversion' when templating variables.
# Useful when you want to avoid conversion into lists or dictionaries for JSON strings, for example.
dont_type_filters=string, to_json, to_nice_json, to_yaml, to_nice_yaml, ppretty, json
